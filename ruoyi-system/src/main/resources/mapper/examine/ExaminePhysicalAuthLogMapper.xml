<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.examine.mapper.ExaminePhysicalAuthLogMapper">
    
    <resultMap type="ExaminePhysicalAuthLog" id="ExaminePhysicalAuthLogResult">
        <result property="id"    column="id"    />
        <result property="examineId"    column="examine_id"    />
        <result property="authUser"    column="auth_user"    />
        <result property="authUserId"    column="auth_user_id"    />
        <result property="authStatus"    column="auth_status"    />
        <result property="reason"    column="reason"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectExaminePhysicalAuthLogVo">
        select id, examine_id, auth_user, auth_user_id, auth_status, reason, del_flag, create_by, create_time, update_by, update_time, remark from examine_physical_auth_log
    </sql>

    <select id="selectExaminePhysicalAuthLogList" parameterType="ExaminePhysicalAuthLog" resultMap="ExaminePhysicalAuthLogResult">
        <include refid="selectExaminePhysicalAuthLogVo"/>
        <where>  
            <if test="examineId != null "> and examine_id = #{examineId}</if>
            <if test="authUser != null  and authUser != ''"> and auth_user = #{authUser}</if>
            <if test="authUserId != null "> and auth_user_id = #{authUserId}</if>
            <if test="authStatus != null  and authStatus != ''"> and auth_status = #{authStatus}</if>
            <if test="reason != null  and reason != ''"> and reason = #{reason}</if>
        </where>
    </select>
    
    <select id="selectExaminePhysicalAuthLogById" parameterType="Long" resultMap="ExaminePhysicalAuthLogResult">
        <include refid="selectExaminePhysicalAuthLogVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertExaminePhysicalAuthLog" parameterType="ExaminePhysicalAuthLog" useGeneratedKeys="true" keyProperty="id">
        insert into examine_physical_auth_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="examineId != null">examine_id,</if>
            <if test="authUser != null">auth_user,</if>
            <if test="authUserId != null">auth_user_id,</if>
            <if test="authStatus != null">auth_status,</if>
            <if test="reason != null">reason,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="examineId != null">#{examineId},</if>
            <if test="authUser != null">#{authUser},</if>
            <if test="authUserId != null">#{authUserId},</if>
            <if test="authStatus != null">#{authStatus},</if>
            <if test="reason != null">#{reason},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateExaminePhysicalAuthLog" parameterType="ExaminePhysicalAuthLog">
        update examine_physical_auth_log
        <trim prefix="SET" suffixOverrides=",">
            <if test="examineId != null">examine_id = #{examineId},</if>
            <if test="authUser != null">auth_user = #{authUser},</if>
            <if test="authUserId != null">auth_user_id = #{authUserId},</if>
            <if test="authStatus != null">auth_status = #{authStatus},</if>
            <if test="reason != null">reason = #{reason},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteExaminePhysicalAuthLogById" parameterType="Long">
        delete from examine_physical_auth_log where id = #{id}
    </delete>

    <delete id="deleteExaminePhysicalAuthLogByIds" parameterType="String">
        delete from examine_physical_auth_log where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>